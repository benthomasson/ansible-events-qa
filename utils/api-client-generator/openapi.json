{
  "openapi": "3.0.2",
  "info": {
    "title": "Ansible Events API",
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Ping",
        "operationId": "ping_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/activations/": {
      "post": {
        "summary": "Create Activation",
        "operationId": "create_activation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationBaseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activation/{activation_id}": {
      "get": {
        "summary": "Read Activation",
        "operationId": "show_activation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Id",
              "type": "integer"
            },
            "name": "activation_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Activation",
        "operationId": "update_activation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Id",
              "type": "integer"
            },
            "name": "activation_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivationBaseRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rules/": {
      "get": {
        "summary": "List Rules",
        "operationId": "list_rules",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Rules",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Rule"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/rules/{rule_id}/": {
      "get": {
        "summary": "Show Rule",
        "operationId": "show_rule",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Rule Id",
              "type": "integer"
            },
            "name": "rule_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/": {
      "get": {
        "summary": "List Projects",
        "operationId": "list_projects",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Projects",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectList"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Project",
        "operationId": "create_projects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{project_id}": {
      "get": {
        "summary": "Read Project",
        "operationId": "read_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "integer"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Project",
        "operationId": "update_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "integer"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rulebooks/": {
      "get": {
        "summary": "List Rulebooks",
        "operationId": "list_rulebooks_api_rulebooks__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Rulebook",
        "operationId": "create_rulebook_api_rulebooks__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rulebook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/inventory/": {
      "post": {
        "summary": "Create Inventory",
        "operationId": "create_inventory_api_inventory__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Inventory"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/extra_vars/": {
      "get": {
        "summary": "List Extra Vars",
        "operationId": "list_extra_vars_api_extra_vars__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Extra Vars",
        "operationId": "create_extra_vars_api_extra_vars__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Extravars"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activation_instance/": {
      "post": {
        "summary": "Create Activation Instance",
        "operationId": "create_activation_instance_api_activation_instance__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/deactivate/": {
      "post": {
        "summary": "Deactivate",
        "operationId": "deactivate_api_deactivate__post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Instance Id",
              "type": "integer"
            },
            "name": "activation_instance_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activation_instance_logs/": {
      "get": {
        "summary": "List Activation Instance Logs",
        "operationId": "list_activation_instance_logs_api_activation_instance_logs__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Instance Id",
              "type": "integer"
            },
            "name": "activation_instance_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Activation Instance Logs Api Activation Instance Logs  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivationLog"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/": {
      "get": {
        "summary": "List Tasks",
        "operationId": "list_tasks_api_tasks__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/project/{project_id}": {
      "delete": {
        "summary": "Delete Project",
        "operationId": "delete_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Project Id",
              "type": "integer"
            },
            "name": "project_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/playbooks/": {
      "get": {
        "summary": "List Playbooks",
        "operationId": "list_playbooks_api_playbooks__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/playbook/{playbook_id}": {
      "get": {
        "summary": "Read Playbook",
        "operationId": "read_playbook_api_playbook__playbook_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Playbook Id",
              "type": "integer"
            },
            "name": "playbook_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/inventories/": {
      "get": {
        "summary": "List Inventories",
        "operationId": "list_inventories_api_inventories__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/inventory/{inventory_id}": {
      "get": {
        "summary": "Read Inventory",
        "operationId": "read_inventory_api_inventory__inventory_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Inventory Id",
              "type": "integer"
            },
            "name": "inventory_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rulebooks/{rulebook_id}": {
      "get": {
        "summary": "Read Rulebook",
        "operationId": "read_rulebook_api_rulebooks__rulebook_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Rulebook Id",
              "type": "integer"
            },
            "name": "rulebook_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/rulebook_json/{rulebook_id}": {
      "get": {
        "summary": "Read Rulebook Json",
        "operationId": "read_rulebook_json_api_rulebook_json__rulebook_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Rulebook Id",
              "type": "integer"
            },
            "name": "rulebook_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/extra_var/{extra_var_id}": {
      "get": {
        "summary": "Read Extravar",
        "operationId": "read_extravar_api_extra_var__extra_var_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Extra Var Id",
              "type": "integer"
            },
            "name": "extra_var_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activation_instances/": {
      "get": {
        "summary": "List Activation Instances",
        "operationId": "list_activation_instances_api_activation_instances__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/activation_instance/{activation_instance_id}": {
      "get": {
        "summary": "Read Activation Instance",
        "operationId": "read_activation_instance_api_activation_instance__activation_instance_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Instance Id",
              "type": "integer"
            },
            "name": "activation_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Activation Instance",
        "operationId": "delete_activation_instance",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Instance Id",
              "type": "integer"
            },
            "name": "activation_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_instances/": {
      "get": {
        "summary": "List Job Instances",
        "operationId": "list_job_instances_api_job_instances__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/job_instance/": {
      "post": {
        "summary": "Create Job Instance",
        "operationId": "create_job_instance_api_job_instance__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_instance/{job_instance_id}": {
      "get": {
        "summary": "Read Job Instance",
        "operationId": "read_job_instance_api_job_instance__job_instance_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Instance Id",
              "type": "integer"
            },
            "name": "job_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Job Instance",
        "operationId": "delete_job_instance",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Instance Id",
              "type": "integer"
            },
            "name": "job_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/job_instance_events/{job_instance_id}": {
      "get": {
        "summary": "Read Job Instance Events",
        "operationId": "read_job_instance_events_api_job_instance_events__job_instance_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Job Instance Id",
              "type": "integer"
            },
            "name": "job_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/activation_instance_job_instances/{activation_instance_id}": {
      "get": {
        "summary": "Read Activation Instance Job Instances",
        "operationId": "read_activation_instance_job_instances_api_activation_instance_job_instances__activation_instance_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Activation Instance Id",
              "type": "integer"
            },
            "name": "activation_instance_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/jwt/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth:Jwt.Login",
        "operationId": "auth_jwt_login_api_auth_jwt_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_jwt_login_api_auth_jwt_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": {
                      "detail": "LOGIN_BAD_CREDENTIALS"
                    }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": {
                      "detail": "LOGIN_USER_NOT_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/jwt/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth:Jwt.Logout",
        "operationId": "auth_jwt_logout_api_auth_jwt_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/bearer/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth:Bearer.Login",
        "operationId": "auth_bearer_login_api_auth_bearer_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_bearer_login_api_auth_bearer_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BearerResponse"
                },
                "example": {
                  "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiOTIyMWZmYzktNjQwZi00MzcyLTg2ZDMtY2U2NDJjYmE1NjAzIiwiYXVkIjoiZmFzdGFwaS11c2VyczphdXRoIiwiZXhwIjoxNTcxNTA0MTkzfQ.M10bjOe45I5Ncu_uXvOmVV8QxnL-nZfcH96U90JaocI",
                  "token_type": "bearer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": {
                      "detail": "LOGIN_BAD_CREDENTIALS"
                    }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": {
                      "detail": "LOGIN_USER_NOT_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/bearer/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Auth:Bearer.Logout",
        "operationId": "auth_bearer_logout_api_auth_bearer_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register:Register",
        "operationId": "register_register_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "REGISTER_USER_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "REGISTER_USER_ALREADY_EXISTS"
                    }
                  },
                  "REGISTER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "REGISTER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset:Forgot Password",
        "operationId": "reset_forgot_password_api_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_forgot_password_api_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset:Reset Password",
        "operationId": "reset_reset_password_api_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_reset_password_api_auth_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "RESET_PASSWORD_BAD_TOKEN": {
                    "summary": "Bad or expired token.",
                    "value": {
                      "detail": "RESET_PASSWORD_BAD_TOKEN"
                    }
                  },
                  "RESET_PASSWORD_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "RESET_PASSWORD_INVALID_PASSWORD",
                        "reason": "Password should be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/request-verify-token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Verify:Request-Token",
        "operationId": "verify_request_token_api_auth_request_verify_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_request_token_api_auth_request_verify_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Verify:Verify",
        "operationId": "verify_verify_api_auth_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_verify_api_auth_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "VERIFY_USER_BAD_TOKEN": {
                    "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                    "value": {
                      "detail": "VERIFY_USER_BAD_TOKEN"
                    }
                  },
                  "VERIFY_USER_ALREADY_VERIFIED": {
                    "summary": "The user is already verified.",
                    "value": {
                      "detail": "VERIFY_USER_ALREADY_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Users:Current User",
        "operationId": "users_current_user_api_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Users:Patch Current User",
        "operationId": "users_patch_current_user_api_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Users:User",
        "operationId": "users_user_api_users__id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Users:Delete User",
        "operationId": "users_delete_user_api_users__id__delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Users:Patch User",
        "operationId": "users_patch_user_api_users__id__patch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id"
            },
            "name": "id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/authenticated-route": {
      "get": {
        "summary": "Authenticated Route",
        "operationId": "authenticated_route_api_authenticated_route_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/api/ssh-public-key": {
      "get": {
        "summary": "Ssh Public Key",
        "operationId": "ssh_public_key_api_ssh_public_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivationBaseRead": {
        "title": "ActivationBaseRead",
        "required": [
          "name",
          "execution_env_id",
          "rulebook_id",
          "inventory_id",
          "restart_policy_id",
          "playbook_id",
          "activation_enabled",
          "extra_var_id",
          "working_directory",
          "execution_environment",
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "execution_env_id": {
            "title": "Execution Env Id",
            "type": "integer"
          },
          "rulebook_id": {
            "title": "Rulebook Id",
            "type": "integer"
          },
          "inventory_id": {
            "title": "Inventory Id",
            "type": "integer"
          },
          "restart_policy_id": {
            "title": "Restart Policy Id",
            "type": "integer"
          },
          "playbook_id": {
            "title": "Playbook Id",
            "type": "integer"
          },
          "activation_enabled": {
            "title": "Activation Enabled",
            "type": "boolean"
          },
          "extra_var_id": {
            "title": "Extra Var Id",
            "type": "integer"
          },
          "working_directory": {
            "title": "Working Directory",
            "type": "string"
          },
          "execution_environment": {
            "title": "Execution Environment",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "ActivationCreate": {
        "title": "ActivationCreate",
        "required": [
          "name",
          "execution_env_id",
          "rulebook_id",
          "inventory_id",
          "restart_policy_id",
          "playbook_id",
          "activation_enabled",
          "extra_var_id",
          "working_directory",
          "execution_environment"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "execution_env_id": {
            "title": "Execution Env Id",
            "type": "integer"
          },
          "rulebook_id": {
            "title": "Rulebook Id",
            "type": "integer"
          },
          "inventory_id": {
            "title": "Inventory Id",
            "type": "integer"
          },
          "restart_policy_id": {
            "title": "Restart Policy Id",
            "type": "integer"
          },
          "playbook_id": {
            "title": "Playbook Id",
            "type": "integer"
          },
          "activation_enabled": {
            "title": "Activation Enabled",
            "type": "boolean"
          },
          "extra_var_id": {
            "title": "Extra Var Id",
            "type": "integer"
          },
          "working_directory": {
            "title": "Working Directory",
            "type": "string"
          },
          "execution_environment": {
            "title": "Execution Environment",
            "type": "string"
          }
        }
      },
      "ActivationInstance": {
        "title": "ActivationInstance",
        "required": [
          "name",
          "rulebook_id",
          "inventory_id",
          "extra_var_id",
          "working_directory",
          "execution_environment"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "rulebook_id": {
            "title": "Rulebook Id",
            "type": "integer"
          },
          "inventory_id": {
            "title": "Inventory Id",
            "type": "integer"
          },
          "extra_var_id": {
            "title": "Extra Var Id",
            "type": "integer"
          },
          "working_directory": {
            "title": "Working Directory",
            "type": "string"
          },
          "execution_environment": {
            "title": "Execution Environment",
            "type": "string"
          }
        }
      },
      "ActivationLog": {
        "title": "ActivationLog",
        "required": [
          "activation_instance_id",
          "log"
        ],
        "type": "object",
        "properties": {
          "activation_instance_id": {
            "title": "Activation Instance Id",
            "type": "integer"
          },
          "log": {
            "title": "Log",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "ActivationRead": {
        "title": "ActivationRead",
        "required": [
          "name",
          "execution_env_id",
          "rulebook_id",
          "inventory_id",
          "restart_policy_id",
          "playbook_id",
          "activation_enabled",
          "extra_var_id",
          "working_directory",
          "execution_environment",
          "id",
          "restarted_count",
          "created_at",
          "modified_at",
          "rulebook_name",
          "inventory_name",
          "extra_var_name",
          "playbook_name",
          "restart_policy_name",
          "execution_env_url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "execution_env_id": {
            "title": "Execution Env Id",
            "type": "integer"
          },
          "rulebook_id": {
            "title": "Rulebook Id",
            "type": "integer"
          },
          "inventory_id": {
            "title": "Inventory Id",
            "type": "integer"
          },
          "restart_policy_id": {
            "title": "Restart Policy Id",
            "type": "integer"
          },
          "playbook_id": {
            "title": "Playbook Id",
            "type": "integer"
          },
          "activation_enabled": {
            "title": "Activation Enabled",
            "type": "boolean"
          },
          "extra_var_id": {
            "title": "Extra Var Id",
            "type": "integer"
          },
          "working_directory": {
            "title": "Working Directory",
            "type": "string"
          },
          "execution_environment": {
            "title": "Execution Environment",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "activation_status": {
            "title": "Activation Status",
            "type": "string"
          },
          "restarted_at": {
            "title": "Restarted At",
            "type": "string",
            "format": "date-time"
          },
          "restarted_count": {
            "title": "Restarted Count",
            "type": "integer"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "title": "Modified At",
            "type": "string",
            "format": "date-time"
          },
          "rulebook_name": {
            "title": "Rulebook Name",
            "type": "string"
          },
          "inventory_name": {
            "title": "Inventory Name",
            "type": "string"
          },
          "extra_var_name": {
            "title": "Extra Var Name",
            "type": "string"
          },
          "playbook_name": {
            "title": "Playbook Name",
            "type": "string"
          },
          "restart_policy_name": {
            "title": "Restart Policy Name",
            "type": "string"
          },
          "execution_env_url": {
            "title": "Execution Env Url",
            "type": "string"
          }
        }
      },
      "ActivationUpdate": {
        "title": "ActivationUpdate",
        "required": [
          "name",
          "activation_enabled"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "activation_enabled": {
            "title": "Activation Enabled",
            "type": "boolean"
          }
        }
      },
      "BearerResponse": {
        "title": "BearerResponse",
        "required": [
          "access_token",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "title": "Access Token",
            "type": "string"
          },
          "token_type": {
            "title": "Token Type",
            "type": "string"
          }
        }
      },
      "Body_auth_bearer_login_api_auth_bearer_login_post": {
        "title": "Body_auth_bearer_login_api_auth_bearer_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "Body_auth_jwt_login_api_auth_jwt_login_post": {
        "title": "Body_auth_jwt_login_api_auth_jwt_login_post",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "grant_type": {
            "title": "Grant Type",
            "pattern": "password",
            "type": "string"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "scope": {
            "title": "Scope",
            "type": "string",
            "default": ""
          },
          "client_id": {
            "title": "Client Id",
            "type": "string"
          },
          "client_secret": {
            "title": "Client Secret",
            "type": "string"
          }
        }
      },
      "Body_reset_forgot_password_api_auth_forgot_password_post": {
        "title": "Body_reset_forgot_password_api_auth_forgot_password_post",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "Body_reset_reset_password_api_auth_reset_password_post": {
        "title": "Body_reset_reset_password_api_auth_reset_password_post",
        "required": [
          "token",
          "password"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          }
        }
      },
      "Body_verify_request_token_api_auth_request_verify_token_post": {
        "title": "Body_verify_request_token_api_auth_request_verify_token_post",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "Body_verify_verify_api_auth_verify_post": {
        "title": "Body_verify_verify_api_auth_verify_post",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "ErrorModel": {
        "title": "ErrorModel",
        "required": [
          "detail"
        ],
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            ]
          }
        }
      },
      "Extravars": {
        "title": "Extravars",
        "required": [
          "name",
          "extra_var"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "extra_var": {
            "title": "Extra Var",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "ExtravarsRef": {
        "title": "ExtravarsRef",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Inventory": {
        "title": "Inventory",
        "required": [
          "name",
          "inventory"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "inventory": {
            "title": "Inventory",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "InventoryRef": {
        "title": "InventoryRef",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "JobInstance": {
        "title": "JobInstance",
        "required": [
          "playbook_id",
          "inventory_id",
          "extra_var_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "playbook_id": {
            "title": "Playbook Id",
            "type": "integer"
          },
          "inventory_id": {
            "title": "Inventory Id",
            "type": "integer"
          },
          "extra_var_id": {
            "title": "Extra Var Id",
            "type": "integer"
          }
        }
      },
      "PlaybookRef": {
        "title": "PlaybookRef",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "ProjectCreate": {
        "title": "ProjectCreate",
        "required": [
          "url",
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "git_hash": {
            "title": "Git Hash",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "ProjectDetail": {
        "title": "ProjectDetail",
        "required": [
          "url",
          "name",
          "description",
          "created_at",
          "modified_at",
          "rulesets",
          "inventories",
          "vars",
          "playbooks"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "git_hash": {
            "title": "Git Hash",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "title": "Modified At",
            "type": "string",
            "format": "date-time"
          },
          "rulesets": {
            "title": "Rulesets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleRulesetRef"
            }
          },
          "inventories": {
            "title": "Inventories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryRef"
            }
          },
          "vars": {
            "title": "Vars",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtravarsRef"
            }
          },
          "playbooks": {
            "title": "Playbooks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaybookRef"
            }
          }
        }
      },
      "ProjectList": {
        "title": "ProjectList",
        "required": [
          "id",
          "url",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "ProjectRead": {
        "title": "ProjectRead",
        "required": [
          "url",
          "name",
          "description",
          "created_at",
          "modified_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "git_hash": {
            "title": "Git Hash",
            "type": "string"
          },
          "url": {
            "title": "Url",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "created_at": {
            "title": "Created At",
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "title": "Modified At",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProjectUpdate": {
        "title": "ProjectUpdate",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "Rule": {
        "title": "Rule",
        "required": [
          "id",
          "action",
          "ruleset"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "action": {
            "title": "Action",
            "type": "object"
          },
          "ruleset": {
            "$ref": "#/components/schemas/RuleRulesetRef"
          }
        }
      },
      "RuleRulesetRef": {
        "title": "RuleRulesetRef",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "Rulebook": {
        "title": "Rulebook",
        "required": [
          "name",
          "rulesets"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "rulesets": {
            "title": "Rulesets",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "integer"
          }
        }
      },
      "UserCreate": {
        "title": "UserCreate",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "is_verified": {
            "title": "Is Verified",
            "type": "boolean",
            "default": false
          }
        }
      },
      "UserRead": {
        "title": "UserRead",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean",
            "default": false
          },
          "is_verified": {
            "title": "Is Verified",
            "type": "boolean",
            "default": false
          }
        },
        "description": "Base User model."
      },
      "UserUpdate": {
        "title": "UserUpdate",
        "type": "object",
        "properties": {
          "password": {
            "title": "Password",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean"
          },
          "is_verified": {
            "title": "Is Verified",
            "type": "boolean"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "fastapiusersauth"
      },
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "api/auth/bearer/login"
          }
        }
      }
    }
  }
}
